{
  "name": "Helpdesk Automation",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "new-ticket",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "4a1c2b3d-4e5f-6a7b-8c9d-0e1f2a3b4c5d",
      "name": "Webhook - New Ticket",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ],
      "webhookId": "new-ticket"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "priority-high",
              "leftValue": "={{ $json.data.priority }}",
              "rightValue": "HIGH",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "5b2c3d4e-5f6a-7b8c-9d0e-1f2a3b4c5d6e",
      "name": "Check Priority",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "nodeCredentialType": "httpBasicAuth",
        "requestMethod": "GET",
        "url": "http://helpdesk-app:3000/api/admin/departments",
        "options": {}
      },
      "id": "6c3d4e5f-6a7b-8c9d-0e1f-2a3b4c5d6e7f",
      "name": "Get Departments",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        680,
        200
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "nodeCredentialType": "httpBasicAuth",
        "requestMethod": "PUT",
        "url": "=http://helpdesk-app:3000/api/tickets/{{ $('Webhook - New Ticket').first().json.data.id }}",
        "sendBody": true,
        "specifyBodyType": "json",
        "jsonBody": "={\n  \"assigneeId\": \"{{ $('Auto-assign Logic').first().json.assigneeId }}\",\n  \"status\": \"OPEN\"\n}",
        "options": {}
      },
      "id": "7d4e5f6a-7b8c-9d0e-1f2a-3b4c5d6e7f8a",
      "name": "Update Ticket Assignment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Auto-assignment logic based on category and department\nconst ticketData = $input.first().json.data;\nconst departments = $('Get Departments').first().json.departments || [];\n\n// Find department for this ticket\nconst ticketDepartment = departments.find(dept => dept.id === ticketData.departmentId);\n\n// Simple round-robin assignment logic (you can enhance this)\nconst assignmentRules = {\n  'IT Support': {\n    'Password Issues': ['staff-user-id-1'],\n    'Email Problems': ['staff-user-id-2'],\n    'Default': ['staff-user-id-1', 'staff-user-id-2']\n  },\n  'HR': {\n    'Leave Request': ['hr-user-id-1'],\n    'Default': ['hr-user-id-1']\n  },\n  'Finance': {\n    'Default': ['finance-user-id-1']\n  }\n};\n\nlet assigneeId = null;\n\nif (ticketDepartment) {\n  const deptRules = assignmentRules[ticketDepartment.name];\n  if (deptRules) {\n    const categoryRule = deptRules[ticketData.category] || deptRules['Default'];\n    if (categoryRule && categoryRule.length > 0) {\n      // Simple round-robin (use ticket ID modulo for distribution)\n      const index = parseInt(ticketData.id.slice(-1), 16) % categoryRule.length;\n      assigneeId = categoryRule[index];\n    }\n  }\n}\n\n// For demo purposes, if no specific assignee found, use a default\nif (!assigneeId) {\n  assigneeId = 'default-admin-user-id';\n}\n\nreturn [{\n  json: {\n    assigneeId: assigneeId,\n    department: ticketDepartment?.name || 'Unknown',\n    category: ticketData.category,\n    reasoning: `Auto-assigned based on category '${ticketData.category}' in department '${ticketDepartment?.name || 'Unknown'}'`\n  }\n}];"
      },
      "id": "8e5f6a7b-8c9d-0e1f-2a3b-4c5d6e7f8a9b",
      "name": "Auto-assign Logic",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "nodeCredentialType": "httpBasicAuth",
        "requestMethod": "GET",
        "url": "=http://helpdesk-app:3000/api/admin/knowledge-base?search={{ encodeURIComponent($('Webhook - New Ticket').first().json.data.title + ' ' + $('Webhook - New Ticket').first().json.data.category) }}",
        "options": {}
      },
      "id": "9f6a7b8c-9d0e-1f2a-3b4c-5d6e7f8a9b0c",
      "name": "Search Knowledge Base",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        680,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "has-kb-articles",
              "leftValue": "={{ $json.articles ? $json.articles.length : 0 }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0a7b8c9d-0e1f-2a3b-4c5d-6e7f8a9b0c1d",
      "name": "Has KB Articles",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        900,
        400
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "nodeCredentialType": "httpBasicAuth",
        "requestMethod": "POST",
        "url": "=http://helpdesk-app:3000/api/tickets/{{ $('Webhook - New Ticket').first().json.data.id }}/comments",
        "sendBody": true,
        "specifyBodyType": "json",
        "jsonBody": "={\n  \"content\": \"ðŸ’¡ **Knowledge Base Suggestions:**\\n\\nI found {{ $('Search Knowledge Base').first().json.articles.length }} relevant articles that might help:\\n\\n{{ $('Search Knowledge Base').first().json.articles.map(article => `**${article.title}**\\n${article.content.substring(0, 200)}...\\n`).join('\\n') }}\\n\\n*This suggestion was automatically generated by the helpdesk system.*\",\n  \"isPublic\": true\n}",
        "options": {}
      },
      "id": "1b8c9d0e-1f2a-3b4c-5d6e-7f8a9b0c1d2e",
      "name": "Add KB Suggestions Comment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        400
      ]
    },
    {
      "parameters": {
        "subject": "=ðŸ”¥ HIGH PRIORITY Ticket: {{ $('Webhook - New Ticket').first().json.data.title }}",
        "message": "=A high priority ticket has been created and requires immediate attention:\\n\\n**Ticket #:** {{ $('Webhook - New Ticket').first().json.data.ticketNumber }}\\n**Title:** {{ $('Webhook - New Ticket').first().json.data.title }}\\n**Priority:** {{ $('Webhook - New Ticket').first().json.data.priority }}\\n**Category:** {{ $('Webhook - New Ticket').first().json.data.category }}\\n**Created:** {{ $('Webhook - New Ticket').first().json.data.createdAt }}\\n\\n**Description:**\\n{{ $('Webhook - New Ticket').first().json.data.description }}\\n\\n**Action Required:** Please assign and respond to this ticket within 1 hour.\\n\\n---\\n*This is an automated notification from the helpdesk system.*",
        "options": {}
      },
      "id": "2c9d0e1f-2a3b-4c5d-6e7f-8a9b0c1d2e3f",
      "name": "Send High Priority Alert",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        680,
        100
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Ticket processed successfully\",\n  \"ticketNumber\": \"{{ $('Webhook - New Ticket').first().json.data.ticketNumber }}\",\n  \"actions\": [\n    {{ $('Check Priority').first().json ? '\"High priority alert sent\",' : '' }}\n    {{ $('Update Ticket Assignment').first().json ? '\"Ticket auto-assigned\",' : '' }}\n    {{ $('Add KB Suggestions Comment').first().json ? '\"KB suggestions added\"' : '' }}\n  ].filter(Boolean),\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
        "options": {}
      },
      "id": "3d0e1f2a-3b4c-5d6e-7f8a-9b0c1d2e3f4a",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1340,
        300
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook - New Ticket": {
      "main": [
        [
          {
            "node": "Check Priority",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Priority": {
      "main": [
        [
          {
            "node": "Send High Priority Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Departments",
            "type": "main",
            "index": 0
          },
          {
            "node": "Search Knowledge Base",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Departments": {
      "main": [
        [
          {
            "node": "Auto-assign Logic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-assign Logic": {
      "main": [
        [
          {
            "node": "Update Ticket Assignment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Knowledge Base": {
      "main": [
        [
          {
            "node": "Has KB Articles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has KB Articles": {
      "main": [
        [
          {
            "node": "Add KB Suggestions Comment",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Update Ticket Assignment": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add KB Suggestions Comment": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send High Priority Alert": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "helpdesk-v1.0",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "helpdesk-automation",
  "tags": []
}